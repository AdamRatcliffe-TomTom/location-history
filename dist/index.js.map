{"version":3,"file":"index.js","sources":["../http.js","../services/objects.js","../services/position_history.js"],"sourcesContent":["import axios from \"axios\";\nimport rateLimit from \"axios-rate-limit\";\n\nconst QPS_LIMIT = process.env.QPS_LIMIT || 5;\nconst QPS_INTERVAL = process.env.QPS_INTERVAL || 1000;\n\nconst http = rateLimit(axios.create(), {\n  maxRequests: QPS_LIMIT,\n  perMilliseconds: QPS_INTERVAL\n});\n\nexport default http;\n","import http from \"../http\";\n\nconst LOCATION_HISTORY_API_BASE_URL =\n  process.env.LOCATION_HISTORY_API_BASE_URL ||\n  \"https://api.tomtom.com/locationHistory/1\";\n\nconst addObject = async ({ apiKey, adminKey, object }) => {\n  const url = `${LOCATION_HISTORY_API_BASE_URL}/objects?key=${apiKey}&adminKey=${adminKey}`;\n  const { data } = await http.post(url, object);\n  return data;\n};\n\nconst editObject = async ({ apiKey, adminKey, id, object }) => {\n  const url = `${LOCATION_HISTORY_API_BASE_URL}/objects/${id}?key=${apiKey}&adminKey=${adminKey}`;\n  const { data } = await http.put(url, object);\n  return data;\n};\n\nconst getObjects = async ({ apiKey }) => {\n  const url = `${LOCATION_HISTORY_API_BASE_URL}/objects?key=${apiKey}`;\n  const { data } = await axios.get(url);\n  const objectDetailRequests = data.objects.map(({ id }) =>\n    getObjectDetail({ apiKey, id })\n  );\n  const objects = await Promise.all(objectDetailRequests);\n  return objects;\n};\n\nconst getObjectDetail = async ({ apiKey, id }) => {\n  const url = `${LOCATION_HISTORY_API_BASE_URL}/objects/${id}?key=${apiKey}`;\n  const { data } = await http.get(url);\n  return data;\n};\n\nconst deleteObject = async ({ apiKey, id }) => {\n  const url = `${LOCATION_HISTORY_API_BASE_URL}/objects/${id}?key=${apiKey}`;\n  const { data } = http.delete(url);\n  return data;\n};\n\nexport { addObject, editObject, getObjects, getObjectDetail, deleteObject };\n","import http from \"../http\";\n\nconst LOCATION_HISTORY_API_BASE_URL =\n  process.env.LOCATION_HISTORY_API_BASE_URL ||\n  \"https://api.tomtom.com/locationHistory/1\";\n\nconst sendPosition = async ({ apiKey, longitude, latitude, altitude }) => {\n  const url = `${LOCATION_HISTORY_API_BASE_URL}/history/positions?key=${apiKey}`;\n  const coordinates = [\n    longitude,\n    latitude,\n    ...(Boolean(altitude) ? [altitude] : [])\n  ];\n  const position = {\n    type: \"Feature\",\n    geometry: {\n      type: \"Point\",\n      coordinates\n    }\n  };\n  const { data } = await http.post(url, position);\n  return data;\n};\n\nconst lastPosition = async ({ apiKey, objectId }) => {\n  const url = `${LOCATION_HISTORY_API_BASE_URL}/history/position/${objectId}?key=${apiKey}`;\n  const { data } = await http.get(url);\n  return data;\n};\n\nconst positionHistory = async ({\n  apiKey,\n  adminKey,\n  objectId,\n  from,\n  to,\n  maxResults,\n  pageNumber\n}) => {\n  let url = `${LOCATION_HISTORY_API_BASE_URL}/history/positions/${objectId}?key=${apiKey}&adminKey=${adminKey}&from=${from}`;\n  if (to) url += `&to=${to}`;\n  if (maxResults) url += `&maxResults=${maxResults}`;\n  if (pageNumber) url += `&pageNumber=${pageNumber}`;\n\n  const { data } = http.get(url);\n  return data;\n};\n\nconst clearPositionHistory = async ({ apiKey, adminKey }) => {\n  const url = `${LOCATION_HISTORY_API_BASE_URL}/history/position?key=${apiKey}&adminKey=${adminKey}`;\n  const { data } = http.delete(url);\n  return data;\n};\n\nexport { sendPosition, lastPosition, positionHistory, clearPositionHistory };\n"],"names":["QPS_LIMIT","process","env","QPS_INTERVAL","http","rateLimit","axios","create","maxRequests","perMilliseconds","LOCATION_HISTORY_API_BASE_URL","getObjectDetail","_ref8","apiKey","id","Promise","resolve","get","data","e","reject","addObject","adminKey","object","post","clearPositionHistory","_http$delete","_ref10","_ref3","put","then","_ref4","getObjects","_ref6","objectDetailRequests","objects","map","all","objectId","positionHistory","_ref5","from","to","maxResults","pageNumber","url","_http$get","sendPosition","longitude","latitude","altitude","_ref","coordinates","concat","Boolean","type","geometry"],"mappings":"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"}