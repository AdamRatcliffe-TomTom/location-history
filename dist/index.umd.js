!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("axios"),require("axios-rate-limit")):"function"==typeof define&&define.amd?define(["exports","axios","axios-rate-limit"],t):t((e||self).locationHistory={},e.axios,e.axiosRateLimit)}(this,function(e,t,r){function o(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}var i=/*#__PURE__*/o(t),n=process.env.QPS_LIMIT||5,a=process.env.QPS_INTERVAL||1e3,s=/*#__PURE__*/o(r).default(i.default.create(),{maxRequests:n,perMilliseconds:a}),c=process.env.LOCATION_HISTORY_API_BASE_URL||"https://api.tomtom.com/locationHistory/1",u=function(e){var t=e.apiKey,r=e.id;try{return Promise.resolve(s.get(c+"/objects/"+r+"?key="+t)).then(function(e){return e.data})}catch(e){return Promise.reject(e)}};function y(){return y=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var r=arguments[t];for(var o in r)Object.prototype.hasOwnProperty.call(r,o)&&(e[o]=r[o])}return e},y.apply(this,arguments)}var m=process.env.LOCATION_HISTORY_API_BASE_URL||"https://api.tomtom.com/locationHistory/1";e.addObject=function(e){var t=e.apiKey,r=e.adminKey,o=e.object;try{return Promise.resolve(s.post(c+"/objects?key="+t+"&adminKey="+r,o)).then(function(e){return e.data})}catch(e){return Promise.reject(e)}},e.clearPositionHistory=function(e){var t=e.apiKey,r=e.adminKey;try{var o=s.delete(m+"/history/position?key="+t+"&adminKey="+r);return Promise.resolve(o.data)}catch(e){return Promise.reject(e)}},e.deleteObject=function(e){var t=e.apiKey,r=e.id;try{var o=s.delete(c+"/objects/"+r+"?key="+t);return Promise.resolve(o.data)}catch(e){return Promise.reject(e)}},e.editObject=function(e){var t=e.apiKey,r=e.adminKey,o=e.id,i=e.object;try{return Promise.resolve(s.put(c+"/objects/"+o+"?key="+t+"&adminKey="+r,i)).then(function(e){return e.data})}catch(e){return Promise.reject(e)}},e.getObjectDetail=u,e.getObjects=function(e){var t=e.apiKey;try{return Promise.resolve(axios.get(c+"/objects?key="+t)).then(function(e){var r=e.data.objects.map(function(e){return u({apiKey:t,id:e.id})});return Promise.resolve(Promise.all(r))})}catch(e){return Promise.reject(e)}},e.lastPosition=function(e){var t=e.apiKey,r=e.objectId;try{return Promise.resolve(s.get(m+"/history/position/"+r+"?key="+t)).then(function(e){return e.data})}catch(e){return Promise.reject(e)}},e.positionHistory=function(e){var t=e.apiKey,r=e.adminKey,o=e.objectId,i=e.from,n=e.to,a=e.maxResults,c=e.pageNumber;try{var u=m+"/history/positions/"+o+"?key="+t+"&adminKey="+r+"&from="+i;n&&(u+="&to="+n),a&&(u+="&maxResults="+a),c&&(u+="&pageNumber="+c);var y=s.get(u);return Promise.resolve(y.data)}catch(e){return Promise.reject(e)}},e.sendPosition=function(e){var t=e.apiKey,r=e.adminKey,o=e.objectId,i=e.longitude,n=e.latitude,a=e.altitude,c=e.timestamp;try{var u=m+"/history/positions?key="+t+"&adminKey="+r,d=y({type:"Feature",geometry:{type:"Point",coordinates:[i,n].concat(Boolean(a)?[a]:[])},object:o},c&&{timestamp:c});return Promise.resolve(s.post(u,d)).then(function(e){return e.data})}catch(e){return Promise.reject(e)}}});
//# sourceMappingURL=index.umd.js.map
