{"version":3,"file":"index.umd.js","sources":["../http.js","../services/objects.js","../services/position_history.js"],"sourcesContent":["import axios from \"axios\";\nimport rateLimit from \"axios-rate-limit\";\n\nconst QPS_LIMIT = process.env.QPS_LIMIT || 5;\nconst QPS_INTERVAL = process.env.QPS_INTERVAL || 1000;\n\nconst http = rateLimit(axios.create(), {\n  maxRequests: QPS_LIMIT,\n  perMilliseconds: QPS_INTERVAL\n});\n\nexport default http;\n","import http from \"../http\";\n\nconst LOCATION_HISTORY_API_BASE_URL =\n  process.env.LOCATION_HISTORY_API_BASE_URL ||\n  \"https://api.tomtom.com/locationHistory/1\";\n\nconst addObject = async ({ apiKey, adminKey, object }) => {\n  const url = `${LOCATION_HISTORY_API_BASE_URL}/objects?key=${apiKey}&adminKey=${adminKey}`;\n  const { data } = await http.post(url, object);\n  return data;\n};\n\nconst editObject = async ({ apiKey, adminKey, id, object }) => {\n  const url = `${LOCATION_HISTORY_API_BASE_URL}/objects/${id}?key=${apiKey}&adminKey=${adminKey}`;\n  const { data } = await http.put(url, object);\n  return data;\n};\n\nconst getObjects = async ({ apiKey }) => {\n  const url = `${LOCATION_HISTORY_API_BASE_URL}/objects?key=${apiKey}`;\n  const { data } = await axios.get(url);\n  const objectDetailRequests = data.objects.map(({ id }) =>\n    getObjectDetail({ apiKey, id })\n  );\n  const objects = await Promise.all(objectDetailRequests);\n  return objects;\n};\n\nconst getObjectDetail = async ({ apiKey, id }) => {\n  const url = `${LOCATION_HISTORY_API_BASE_URL}/objects/${id}?key=${apiKey}`;\n  const { data } = await http.get(url);\n  return data;\n};\n\nconst deleteObject = async ({ apiKey, id }) => {\n  const url = `${LOCATION_HISTORY_API_BASE_URL}/objects/${id}?key=${apiKey}`;\n  const { data } = http.delete(url);\n  return data;\n};\n\nexport { addObject, editObject, getObjects, getObjectDetail, deleteObject };\n","import http from \"../http\";\n\nconst LOCATION_HISTORY_API_BASE_URL =\n  process.env.LOCATION_HISTORY_API_BASE_URL ||\n  \"https://api.tomtom.com/locationHistory/1\";\n\nconst sendPosition = async ({\n  apiKey,\n  objectId,\n  longitude,\n  latitude,\n  altitude,\n  timestamp\n}) => {\n  const url = `${LOCATION_HISTORY_API_BASE_URL}/history/positions?key=${apiKey}`;\n  const coordinates = [\n    longitude,\n    latitude,\n    ...(Boolean(altitude) ? [altitude] : [])\n  ];\n  const position = {\n    type: \"Feature\",\n    geometry: {\n      type: \"Point\",\n      coordinates\n    },\n    object: objectId,\n    ...(timestamp && { timestamp })\n  };\n  const { data } = await http.post(url, position);\n  return data;\n};\n\nconst lastPosition = async ({ apiKey, objectId }) => {\n  const url = `${LOCATION_HISTORY_API_BASE_URL}/history/position/${objectId}?key=${apiKey}`;\n  const { data } = await http.get(url);\n  return data;\n};\n\nconst positionHistory = async ({\n  apiKey,\n  adminKey,\n  objectId,\n  from,\n  to,\n  maxResults,\n  pageNumber\n}) => {\n  let url = `${LOCATION_HISTORY_API_BASE_URL}/history/positions/${objectId}?key=${apiKey}&adminKey=${adminKey}&from=${from}`;\n  if (to) url += `&to=${to}`;\n  if (maxResults) url += `&maxResults=${maxResults}`;\n  if (pageNumber) url += `&pageNumber=${pageNumber}`;\n\n  const { data } = http.get(url);\n  return data;\n};\n\nconst clearPositionHistory = async ({ apiKey, adminKey }) => {\n  const url = `${LOCATION_HISTORY_API_BASE_URL}/history/position?key=${apiKey}&adminKey=${adminKey}`;\n  const { data } = http.delete(url);\n  return data;\n};\n\nexport { sendPosition, lastPosition, positionHistory, clearPositionHistory };\n"],"names":["QPS_LIMIT","process","env","QPS_INTERVAL","http","rateLimit","axios","create","maxRequests","perMilliseconds","LOCATION_HISTORY_API_BASE_URL","getObjectDetail","_ref8","apiKey","id","Promise","resolve","get","data","e","reject","addObject","adminKey","object","post","_ref6","_http$delete","_ref10","_ref3","put","then","_ref4","getObjects","objectDetailRequests","objects","map","all","objectId","positionHistory","_ref5","from","to","maxResults","pageNumber","url","_http$get","_ref","longitude","latitude","altitude","timestamp","position","_extends","type","geometry","coordinates","concat","Boolean","_ref2"],"mappings":"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"}