{"version":3,"file":"index.module.js","sources":["../http.js","../services/objects.js","../services/position_history.js"],"sourcesContent":["import axios from \"axios\";\nimport rateLimit from \"axios-rate-limit\";\n\nconst QPS_LIMIT = process.env.QPS_LIMIT || 5;\nconst QPS_INTERVAL = process.env.QPS_INTERVAL || 1000;\n\nconst http = rateLimit(axios.create(), {\n  maxRequests: QPS_LIMIT,\n  perMilliseconds: QPS_INTERVAL\n});\n\nexport default http;\n","import http from \"../http\";\n\nconst LOCATION_HISTORY_API_BASE_URL =\n  process.env.LOCATION_HISTORY_API_BASE_URL ||\n  \"https://api.tomtom.com/locationHistory/1\";\n\nconst addObject = async ({ apiKey, adminKey, object }) => {\n  const url = `${LOCATION_HISTORY_API_BASE_URL}/objects?key=${apiKey}&adminKey=${adminKey}`;\n  const { data } = await http.post(url, object);\n  return data;\n};\n\nconst editObject = async ({ apiKey, adminKey, id, object }) => {\n  const url = `${LOCATION_HISTORY_API_BASE_URL}/objects/${id}?key=${apiKey}&adminKey=${adminKey}`;\n  const { data } = await http.put(url, object);\n  return data;\n};\n\nconst getObjects = async ({ apiKey }) => {\n  const url = `${LOCATION_HISTORY_API_BASE_URL}/objects?key=${apiKey}`;\n  const { data } = await http.get(url);\n  const objectDetailRequests = data.objects.map(({ id }) =>\n    getObjectDetail({ apiKey, id })\n  );\n  const objects = await Promise.all(objectDetailRequests);\n  return objects;\n};\n\nconst getObjectDetail = async ({ apiKey, id }) => {\n  const url = `${LOCATION_HISTORY_API_BASE_URL}/objects/${id}?key=${apiKey}`;\n  const { data } = await http.get(url);\n  return data;\n};\n\nconst deleteObject = async ({ apiKey, id }) => {\n  const url = `${LOCATION_HISTORY_API_BASE_URL}/objects/${id}?key=${apiKey}`;\n  const { data } = http.delete(url);\n  return data;\n};\n\nexport { addObject, editObject, getObjects, getObjectDetail, deleteObject };\n","import http from \"../http\";\n\nconst LOCATION_HISTORY_API_BASE_URL =\n  process.env.LOCATION_HISTORY_API_BASE_URL ||\n  \"https://api.tomtom.com/locationHistory/1\";\n\nconst sendPosition = async ({\n  apiKey,\n  adminKey,\n  objectId,\n  longitude,\n  latitude,\n  altitude,\n  timestamp\n}) => {\n  const url = `${LOCATION_HISTORY_API_BASE_URL}/history/positions?key=${apiKey}&adminKey=${adminKey}`;\n  const coordinates = [\n    longitude,\n    latitude,\n    ...(Boolean(altitude) ? [altitude] : [])\n  ];\n  const position = {\n    type: \"Feature\",\n    geometry: {\n      type: \"Point\",\n      coordinates\n    },\n    object: objectId,\n    ...(timestamp && { timestamp })\n  };\n  const { data } = await http.post(url, position);\n  return data;\n};\n\nconst lastPosition = async ({ apiKey, objectId }) => {\n  const url = `${LOCATION_HISTORY_API_BASE_URL}/history/position/${objectId}?key=${apiKey}`;\n  const { data } = await http.get(url);\n  return data;\n};\n\nconst positionHistory = async ({\n  apiKey,\n  adminKey,\n  objectId,\n  from,\n  to,\n  maxResults,\n  pageNumber\n}) => {\n  let url = `${LOCATION_HISTORY_API_BASE_URL}/history/positions/${objectId}?key=${apiKey}&adminKey=${adminKey}&from=${from}`;\n  if (to) url += `&to=${to}`;\n  if (maxResults) url += `&maxResults=${maxResults}`;\n  if (pageNumber) url += `&pageNumber=${pageNumber}`;\n\n  const { data } = http.get(url);\n  return data;\n};\n\nconst clearPositionHistory = async ({ apiKey, adminKey }) => {\n  const url = `${LOCATION_HISTORY_API_BASE_URL}/history/position?key=${apiKey}&adminKey=${adminKey}`;\n  const { data } = http.delete(url);\n  return data;\n};\n\nexport { sendPosition, lastPosition, positionHistory, clearPositionHistory };\n"],"names":["QPS_LIMIT","process","env","QPS_INTERVAL","http","rateLimit","axios","create","maxRequests","perMilliseconds","LOCATION_HISTORY_API_BASE_URL","addObject","apiKey","adminKey","object","post","data","e","Promise","reject","editObject","_ref3","id","resolve","put","then","_ref4","getObjects","get","_ref6","objectDetailRequests","objects","map","getObjectDetail","all","_ref8","deleteObject","_ref10","_http$delete","sendPosition","_ref","objectId","longitude","latitude","altitude","timestamp","url","position","type","geometry","coordinates","concat","Boolean","lastPosition","positionHistory","_ref5","from","to","maxResults","pageNumber","_http$get","clearPositionHistory"],"mappings":"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"}