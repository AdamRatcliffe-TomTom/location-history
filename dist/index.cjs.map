{"version":3,"file":"index.cjs","sources":["../services/objects.js"],"sourcesContent":["import axios from \"axios\";\nimport valvelet from \"valvelet\";\n\nconst QPS_LIMIT = process.env.QPS_LIMIT || 5;\nconst QPS_INTERVAL = process.env.QPS_INTERVAL || 1000;\nconst LOCATION_HISTORY_API_BASE_URL =\n  process.env.LOCATION_HISTORY_API_BASE_URL ||\n  \"https://api.tomtom.com/locationHistory/1\";\n\nconst addObject = async ({ apiKey, adminKey, object }) => {\n  const url = `${LOCATION_HISTORY_API_BASE_URL}/objects?key=${apiKey}&adminKey=${adminKey}`;\n  const { data } = await axios.post(url, object);\n  return data;\n};\n\nconst editObject = async ({ apiKey, adminKey, id, object }) => {\n  const url = `${LOCATION_HISTORY_API_BASE_URL}/objects/${id}?key=${apiKey}&adminKey=${adminKey}`;\n  const { data } = await axios.put(url, object);\n  return data;\n};\n\nconst getObjects = async ({ apiKey }) => {\n  const url = `${LOCATION_HISTORY_API_BASE_URL}/objects?key=${apiKey}`;\n  const { data } = await axios.get(url);\n  const objectDetailRequests = data.objects.map(({ id }) =>\n    getObjectDetail({ apiKey, id })\n  );\n  const objects = await Promise.all(objectDetailRequests);\n  return objects;\n};\n\nconst getObjectDetail = valvelet(\n  async ({ apiKey, id }) => {\n    const url = `${LOCATION_HISTORY_API_BASE_URL}/objects/${id}?key=${apiKey}`;\n    const { data } = await axios.get(url);\n    return data;\n  },\n  QPS_LIMIT,\n  QPS_INTERVAL\n);\n\nconst deleteObject = async ({ apiKey, id }) => {\n  const url = `${LOCATION_HISTORY_API_BASE_URL}/objects/${id}?key=${apiKey}`;\n  const { data } = axios.delete(url);\n  return data;\n};\n\nexport { addObject, editObject, getObjects, getObjectDetail, deleteObject };\n"],"names":["QPS_LIMIT","process","env","QPS_INTERVAL","LOCATION_HISTORY_API_BASE_URL","getObjectDetail","valvelet","apiKey","id","_ref8","axios","get","_ref9","data","e","Promise","reject","_ref","adminKey","object","post","deleteObject","_ref10","resolve","_ref3","put","then","_ref4","_ref5","objectDetailRequests","objects","map","all"],"mappings":"6IAGeA,EAAGC,QAAQC,IAAIF,WAAa,EACzBG,EAAGF,QAAQC,IAAIC,cAAgB,IAC3CC,EACJH,QAAQC,IAAIE,+BACZ,2CAwBIC,oBAAkBC,QACbC,SAAAA,GAAAA,IAAAA,IAAAA,OAAQC,EAAEC,EAAFD,GAAS,IACmD,OACpDE,QAAAA,QAAAA,EAAAA,QAAMC,IADdP,EAA6B,YAAYI,EAAE,QAAQD,qBAElE,OADYK,EAAJC,IACI,EACb,CAAA,MAAAC,GAAA,OAAAC,QAAAC,OAAAF,EAAA,CAAA,EACDd,EACAG,qBA7Ba,SAAAc,GAAA,MAAYV,EAAAA,OAAQW,IAAAA,SAAUC,EAAMF,EAANE,OAAM,IACyC,OACnET,QAAAA,QAAAA,EAAAA,QAAMU,KADdhB,EAA6CG,gBAAAA,eAAmBW,EACxCC,IAA/BN,KAAAA,SAAAA,GACR,SADQA,IACI,EACb,CAAA,MAAAC,GAAA,OAAAC,QAAAC,OAAAF,EAAA,CAAA,uBA4BKO,gBAA8Bd,EAAAe,EAANf,OAAQC,EAAAA,EAAAA,GAAS,IAC7C,MACiBE,EAAAA,QAAK,OADPN,cAAyCI,EAAE,QAAQD,GAElE,OAAAQ,QAAAQ,QADQV,EAAAA,KAIV,CAFC,MAEDC,GAAA,OAAAC,QAAAC,OAAAF,EAAA,CAAA,8BAhCgBU,GAAA,IAAkBjB,EAAAiB,EAANjB,OAAQW,EAAQM,EAARN,SAAUV,EAAAA,EAAAA,GAAIW,EAAMK,EAANL,OAAM,IAC0C,OACzET,QAAAA,QAAAA,EAAK,QAACe,IADdrB,EAAyCI,YAAAA,EAAUD,QAAAA,eAAmBW,EAC/CC,IAAOO,KAAA,SAAAC,GAC7C,OADYA,EAAJd,IACI,EACb,CAAA,MAAAC,GAAA,OAAAC,QAAAC,OAAAF,EAAA,CAAA,wDAEec,GAAA,IAAkBrB,EAAAqB,EAANrB,OAAa,IAC8B,OAC9CG,QAAAA,QAAAA,EAAAA,QAAMC,IADdP,EAA6CG,gBAAAA,IACpDM,KAAAA,SAAAA,GAAAA,IACFgB,IADEhB,KAC0BiB,QAAQC,IAAI,SAAGvB,GAAE,OAClCH,EAAC,CAAEE,OAAAA,EAAQC,KADqBA,IAChB,GAC/B,OACoBO,QAAAA,QAAAA,QAAQiB,IAAIH,KAEnC,CAAA,MAAAf,GAAA,OAAAC,QAAAC,OAAAF,EAAA,CAAA"}